
MISE EN PROD :
- vérifier l'envoi de mail lors de la publication d'une nouvelle proposition
- augmenter taille des commentaires (4096 char) et largeur du textarea des commentaires.

- liste des suivis (fancybox) : afficher le nom des pages (au lieu du numéro)

- boutons pour partager les programmes (twitter, facebook et +1)

- programmes : pouvoir ordonner ses propositions (ajouter champ no dans cq1_4_selection_quote)

- pouvoir voter pour des programmes


- citer un commentaire : ajouter nom, date et référence

- ajouter une partie wiki (à coté des commentaires et pétition)

- permettre la création de comptes pour poster les commentaires et citations


- rendre le site accessible depuis un smartphone

- Ajouter des pages pour présenter mes solutions ou mettre des liens vers mon blog...

- ajouter des tables pour faire des sondages (sondage, sondage_options, sondage_answers)

- mettre en place un chat

- permettre de modifier les description et les citations et suivre les modifs avec l'historique

- améliorer les pages category.php, local_selection.php et selection.php

- améliorer les pages d'erreur (404.php et 403.php)




Refactoring :
	- html/css : responsive webdesign
	- css : less compiler
	- php : MVC framework (symfony, zend, cakephp ou codeIgner)
	- js : frameworks jQuery, require, underscore, backbone

- JavaScript bonnes pratiques :
	* http://whoshallsucceed.calepin.co/organiser-son-application-backbone-avec-des-modules.html
	* http://www.alsacreations.com/article/lire/565-JavaScript-organiser-son-code-en-modules.html
	* http://desgeeksetdeslettres.com/blog/programmation-java/optimiser-et-structurer-son-code-javascript
	* http://www.atinux.fr/2011/12/10/organiser-son-code-backbone-js-en-modules/ (mini application avec backbone.js)
	
- lib JS :
	* jquery.js
	* require.js
	* underscore.js
	* backbone.js